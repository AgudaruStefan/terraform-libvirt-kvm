---
- hosts: all
  become: yes
  vars_files:
  - env_variables
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Check if GPG key file exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      register: kubegpg_file
    - name: GPG Key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      when: not kubegpg_file.stat.exists
    - name: Add Repo
      shell: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: Apt Updateing
      shell: sudo apt-get update

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubeadm
        - kubelet
        - kubectl

    - name: remove swap
      shell: "swapoff -a"

- hosts: masters
  vars_files:
  - env_variables
  tasks:

    - name: initialize the cluster
      become: yes
      shell: kubeadm init --pod-network-cidr=10.10.10.0/24 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: get kubeconfig
      become: yes
      shell: export KUBECONFIG=/etc/kubernetes/admin.conf
    
    # - name: create .kube directory
    #   become: yes
    #   become_user: ansible
    #   file:
    #     path: $HOME/.kube
    #     state: directory
    #     mode: 0755
    
    # - name: copy admin.conf to user's kube config
    #   become: yes
    #   copy:
    #     src: /etc/kubernetes/admin.conf
    #     dest: /home/ansible/.kube/config
    #     remote_src: yes
    #     owner: ansible

    - name: get join command
      become: yes
      shell: kubeadm token create --print-join-command
      register: join_command_raw
 
    - name: set join command
      become: yes
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"
    
    - name: Installing firewalld
      become: yes
      apt:
        name: firewalld
        state: present

    - name: Allow Network Ports in Firewalld
      become: yes
      firewalld:
        port: "{{ item }}"
        state: enabled
        permanent: yes
        immediate: yes
      with_items: "{{ ports }}"

    - name: install Pod network
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt

- hosts: workers
  become: yes
  tasks:
    - name: remove swap
      shell: "swapoff -a"
      
    - name: join cluster	
      shell: "{{ hostvars['master'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt

- name: Installing and Configuring Kubernetes Cluster For Master Nodes
  hosts: masters
  gather_facts: true
  tasks:
    - name: Prerequstites of Kubernetes Cluster for RedHat 8
      shell: |
        swapoff -av
        sed -i '/\bswap\b/ s/^/#/' /etc/fstab
        sed -i s/^SELINUX=enforcing/SELINUX=disabled/g /etc/selinux/config
        sed -i s/^SELINUX=permissive/SELINUX=disabled/g /etc/selinux/config
        systemctl disable firewalld
        systemctl stop firewalld
        touch /etc/modules-load.d/99-istio-modules.conf
        cat << EOF > /etc/modules-load.d/99-istio-modules.conf
        # These modules need to be loaded on boot so that Istio (as required by Kubeflow) runs properly.
        # See also: https://github.com/istio/istio/issues/23009

        br_netfilter
        nf_nat
        xt_REDIRECT
        xt_owner
        iptable_nat
        iptable_mangle
        iptable_filter
        EOF
        #### Creating Repo file for K8S ####
        touch /etc/yum.repos.d/K8s.repo
        #### Containerd Modules ####
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      when: ansible_facts['os_family'] == "RedHat"
      tags: "1"
    - name: Prerequstites of Kubernetes Cluster for Ubuntu
      shell: |
        swapoff -av
        sed -i '/\bswap\b/ s/^/#/' /etc/fstab
        ufw disable
        touch /etc/modules-load.d/99-istio-modules.conf
        cat << EOF > /etc/modules-load.d/99-istio-modules.conf
        # These modules need to be loaded on boot so that Istio (as required by Kubeflow) runs properly.
        # See also: https://github.com/istio/istio/issues/23009

        br_netfilter
        nf_nat
        xt_REDIRECT
        xt_owner
        iptable_nat
        iptable_mangle
        iptable_filter
        EOF
        #### Containerd Modules ####
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      when: ansible_facts['os_family'] == "Debian"
      tags: "2"
    - name: Prequest completed rebooting Server and after continue task
      shell: reboot
      async: 1
      poll: 0
      tags: "3"
    - name: Waiting for server back online
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      tags: "4"
    - name: Adding Docker & K8s repo for Ubuntu
      shell: |
        sudo apt update -y
        sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
        sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        sudo apt update -y
      when: ansible_facts['os_family'] == "Debian"
      tags: "5"
    - name: Exclude Conflict Version Of Kubelet
      become: true
      shell: |
        sudo echo 'exclude=kubelet-1.18.4-0 kubelet-1.17.7-0 kubelet-1.16.11-0' >> /etc/yum.conf
      tags: "6"
    - name: Add Kubernetes apt repository key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
    - name: Add Docker apt repository key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
    - name: Add Docker apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: Update apt package cache
      apt:
        update_cache: yes
    - name: Install Kubernetes and Container runtime packages
      apt:
        name: "{{ item }}"
        state: present
        loop:
          - containerd.io
          - kubeadm
          - kubectl
          - kubelet
    - name: Configuring Containerd
      shell: |
        modprobe overlay
        modprobe br_netfilter
        cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
         net.bridge.bridge-nf-call-iptables = 1
         net.ipv4.ip_forward = 1
         net.bridge.bridge-nf-call-ip6tables = 1
        EOF
        sysctl â€“system
        mkdir -p /etc/containerd
        containerd config default | sudo tee /etc/containerd/config.toml
        sed -i 's/disabled_plugins/#disabled_plugins/g' /etc/containerd/config.toml
        cat << EOF > /etc/crictl.yaml
         runtime-endpoint: unix:///run/containerd/containerd.sock
         image-endpoint: unix:///run/containerd/containerd.sock
         timeout: 2
         debug: true
         pull-image-on-create: false
         disable-pull-on-run: false
        EOF
        systemctl enable containerd
        systemctl restart containerd
      tags: "11"
    - name: Configuring Kubernetes Cluster for Ubuntu
      shell: |
        systemctl enable docker kubelet
        systemctl start docker kubelet
        kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all > /tmp/kube.outs
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
        #Kubernetes Network Plugins CNI (Flannel)
        #kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        #Kubernetes Network Plugins CNI (Calico)
        kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: ansible_facts['os_family'] == "Debian"
      tags: "13"
    - name: Generate API token for Kubernetes worker nodes to join K8S master
      shell: |
        kubeadm token create --print-join-command > /etc/kubernetes/joincluster.sh 2>/dev/null
      tags: "14"
- hosts: masters
  tasks:
    - name: Fetch API Token From K8S Master To Ansible Controller
      fetch:
        src: /etc/kubernetes/joincluster.sh
        dest: /tmp/
        flat: yes
      tags: "15"
    - debug:
        msg: Control Plane is Ready..!! Please Run the Worker Setup Playbook
      tags: "19"
